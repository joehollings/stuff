name: 'Deploy Azure CAF Resources'
on:
  pull_request:
    paths: 
        - 'terraform/caf/**'
  pull_request_target:
    types:
        - closed
    paths: 
        - 'terraform/caf/**'
env:
  tf_working_dir: './terraform/caf'
  tf_version: 'latest'
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  # ARM_USE_OIDC: ${{ vars.USE_OIDC }}
  ARM_USE_AZUREAD: ${{ vars.USE_AZUREAD_AUTH }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  TF_VAR_admin_username: ${{ secrets.ADMIN_USERNAME }}
  TF_VAR_admin_password: ${{ secrets.ADMIN_PASSWORD }}

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_working_dir }}
        
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: true
            token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: tflint
        uses: reviewdog/action-tflint@v1
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          working_directory: ${{ env.tf_working_dir }} # Optional. Change working directory
          reporter: github-pr-review # Optional. Change reporter
          fail_on_error: "false" # Optional. Fail action if errors are found
          filter_mode: "nofilter" # Optional. Check all files, not just the diff
          #tflint_version: "v0.24.0" # Optional. Custom version, instead of latest
          tflint_rulesets: "azurerm" # Optional. Extra official rulesets to install
          flags: "--call-module-type=all" # Optional. Add custom tflint flags

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
            
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  terraform_apply:
    name: 'Terraform Apply'
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.tf_working_dir }}

    steps:
    - uses: actions/checkout@v4
      with:
          submodules: true
          token: ${{ secrets.PAT_TOKEN }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve -input=false
