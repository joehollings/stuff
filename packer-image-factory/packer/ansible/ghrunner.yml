---
- name: Setup GitHub Runner
  hosts: localhost
  become: true
  tasks:
    - name: Add runner user
      ansible.builtin.user:
        name: githubrunner1
        system: true
        group: true

    - name: Create .netrc file if it doesn't exist
      ansible.builtin.file:
        path: /home/githubrunner1/.netrc
        state: touch
      when: ansible_facts['files']['/home/githubrunner1/.netrc'] is not defined

    - name: Add GitHub credentials to .netrc
      ansible.builtin.lineinfile:
        path: /home/githubrunner1/.netrc
        line: "machine github.com login joehollings password {{ github_token }}"
      when: ansible_facts['files']['/home/githubrunner1/.netrc'] is not defined

    - name: Allow sudo for runner user
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: 'githubrunner1 ALL = NOPASSWD:/usr/bin/apt-get, /usr/sbin/usermod, /usr/bin/gpg, /usr/bin/tee, /usr/bin/curl'
        state: present

    - name: Update system
      ansible.builtin.apt:
        update_cache: true

    - name: Install unzip
      ansible.builtin.apt:
        name: unzip
        state: present

    - name: Install Node.js
      block:
        - name: Install Node.js dependencies
          ansible.builtin.apt:
            name:
              - ca-certificates
              - curl
              - gnupg
            state: present

        - name: Add NodeSource GPG key
          ansible.builtin.apt_key:
            url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
            state: present

        - name: Add NodeSource repository
          ansible.builtin.apt_repository:
            repo: "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main"
            state: present

        - name: Install Node.js
          ansible.builtin.apt:
            name: nodejs
            state: present
      when: "'node' not in ansible_facts['pkg_mgrs']"

    - name: Install Docker
      block:
        - name: Install Docker dependencies
          ansible.builtin.apt:
            name:
              - make
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg
              - lsb-release
            state: present

        - name: Add Docker GPG key
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            state: present

        - name: Install Docker
          ansible.builtin.apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
            state: present

        - name: Add githubrunner1 to docker group
          ansible.builtin.user:
            name: githubrunner1
            groups: docker
            append: true
      when: "'docker' not in ansible_facts['pkg_mgrs']"

    - name: Install Ansible
      block:
        - name: Add Ansible PPA
          ansible.builtin.apt_repository:
            repo: ppa:ansible/ansible
            state: present

        - name: Install Ansible
          ansible.builtin.apt:
            name: ansible
            state: present
      when: "'ansible' not in ansible_facts['pkg_mgrs']"

    - name: Install Azure CLI
      block:
        - name: Install Azure CLI dependencies
          ansible.builtin.apt:
            name:
              - ca-certificates
              - curl
              - apt-transport-https
              - lsb-release
              - gnupg
            state: present

        - name: Add Microsoft GPG key
          ansible.builtin.apt_key:
            url: https://packages.microsoft.com/keys/microsoft.asc
            state: present

        - name: Add Azure CLI repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main"
            state: present

        - name: Install Azure CLI
          ansible.builtin.apt:
            name: azure-cli
            state: present

        - name: Install jq
          ansible.builtin.apt:
            name: jq
            state: present
      when: "'az' not in ansible_facts['pkg_mgrs']"

    - name: Install Packer
      block:
        - name: Add HashiCorp GPG key
          ansible.builtin.apt_key:
            url: https://apt.releases.hashicorp.com/gpg
            state: present

        - name: Add HashiCorp repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            state: present

        - name: Install Packer
          ansible.builtin.apt:
            name: packer
            state: present
      when: "'packer' not in ansible_facts['pkg_mgrs']"

    - name: Install Terraform
      ansible.builtin.apt:
        name: terraform
        state: present
      when: "'terraform' not in ansible_facts['pkg_mgrs']"

    - name: Download runner software
      block:
        - name: Create actions-runner directory
          ansible.builtin.file:
            path: /home/githubrunner1/actions-runner
            state: directory
            mode: '0755'

        - name: Download runner tarball
          ansible.builtin.get_url:
            url: https://github.com/actions/runner/releases/download/v2.304.0/actions-runner-linux-x64-2.304.0.tar.gz
            dest: /home/githubrunner1/actions-runner/actions-runner-linux-x64-2.304.0.tar.gz

        - name: Extract runner tarball
          ansible.builtin.unarchive:
            src: /home/githubrunner1/actions-runner/actions-runner-linux-x64-2.304.0.tar.gz
            dest: /home/githubrunner1/actions-runner
            remote_src: true
      when: ansible_facts['files']['/home/githubrunner1/actions-runner/actions-runner-linux-x64-2.304.0.tar.gz'] is not defined

    - name: Mount NAS
      block:
        - name: Create /nas directory
          ansible.builtin.file:
            path: /nas
            state: directory

        - name: Create /etc/smbcredentials directory
          ansible.builtin.file:
            path: /etc/smbcredentials
            state: directory

        - name: Create NAS credentials file
          ansible.builtin.copy:
            dest: /etc/smbcredentials/owscsafs01.cred
            content: |
              username=owscsafs01
              password={{ access_key }}
            mode: '0777'
      when: ansible_facts['files']['/etc/smbcredentials/owscsafs01.cred'] is not defined

    - name: Mount NAS share
      ansible.builtin.mount:
        path: /nas
        src: //owscsafs01.file.core.windows.net/nas
        fstype: cifs
        opts: vers=3.0,credentials=/etc/smbcredentials/owscsafs01.cred,dir_mode=0777,file_mode=0777,serverino
        state: mounted

    - name: Copy completed_cycle.sh from NAS
      ansible.builtin.copy:
        src: /nas/gh_runner/completed_cycle.sh
        dest: /opt/githubrunner/completed_cycle.sh
        mode: '0755'
      when: ansible_facts['files']['/opt/githubrunner/completed_cycle.sh'] is not defined

    - name: Copy reg_runner.sh from NAS
      ansible.builtin.copy:
        mode: '0755'
        src: /nas/gh_runner/reg_runner.sh
        dest: /opt/githubrunner/reg_runner.sh
      when: ansible_facts['files']['/opt/githubrunner/reg_runner.sh'] is not defined

    - name: Copy github-runner.service from NAS
      ansible.builtin.copy:
        src: /nas/gh_runner/github-runner.service
        dest: /etc/systemd/system/github-runner.service
        mode: '0644'
      when: ansible_facts['files']['/etc/systemd/system/github-runner.service'] is not defined

    - name: Enable github-runner.service
      ansible.builtin.systemd:
        name: github-runner.service
        enabled: true
        state: stopped
